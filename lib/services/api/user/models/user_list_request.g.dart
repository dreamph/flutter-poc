// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user_list_request.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

UserListRequest _$UserListRequestFromJson(Map<String, dynamic> json) {
  return UserListRequest(
    bankAccountName: json['bankAccountName'] as String,
    bankAccountNumber: json['bankAccountNumber'] as String,
    bankCode: json['bankCode'] as String,
    bankName: json['bankName'] as String,
    businessType: json['businessType'] as String,
    changeBy: json['changeBy'] as String,
    changeDateFrom: json['changeDateFrom'] as String,
    changeDateTo: json['changeDateTo'] as String,
    corporateBusinessType: json['corporateBusinessType'] as String,
    corporateEmail: json['corporateEmail'] as String,
    corporateEmailDisplay: json['corporateEmailDisplay'] as bool,
    corporateNameEn: json['corporateNameEn'] as String,
    corporateNameTh: json['corporateNameTh'] as String,
    corporateNumber: json['corporateNumber'] as String,
    corporatePurpose: json['corporatePurpose'] as String,
    corporateRegistrationDate: json['corporateRegistrationDate'] as String,
    corporateSymbol: json['corporateSymbol'] as String,
    corporateTelephone: json['corporateTelephone'] as String,
    corporateTelephoneDisplay: json['corporateTelephoneDisplay'] as bool,
    corporateType: json['corporateType'] as String,
    corporateUrlFacebook: json['corporateUrlFacebook'] as String,
    corporateUrlFacebookDisplay: json['corporateUrlFacebookDisplay'] as bool,
    corporateUrlInstagram: json['corporateUrlInstagram'] as String,
    corporateUrlInstagramDisplay: json['corporateUrlInstagramDisplay'] as bool,
    corporateUrlTwitter: json['corporateUrlTwitter'] as String,
    corporateUrlTwitterDisplay: json['corporateUrlTwitterDisplay'] as bool,
    corporateUrlWebsite: json['corporateUrlWebsite'] as String,
    corporateUrlWebsiteDisplay: json['corporateUrlWebsiteDisplay'] as bool,
    createBy: json['createBy'] as String,
    createDateFrom: json['createDateFrom'] as String,
    createDateTo: json['createDateTo'] as String,
    dipchipStatus: json['dipchipStatus'] as bool,
    displayName: json['displayName'] as String,
    email: json['email'] as String,
    emailVerificationStatus: json['emailVerificationStatus'] as bool,
    firstNameEn: json['firstNameEn'] as String,
    firstNameTh: json['firstNameTh'] as String,
    id: json['id'] as String,
    idCardNo: json['idCardNo'] as String,
    incomeRange: json['incomeRange'] as String,
    incomeValue: json['incomeValue'] as int,
    kycStatus: json['kycStatus'] as bool,
    lastNameEn: json['lastNameEn'] as String,
    lastNameTh: json['lastNameTh'] as String,
    limit: json['limit'] == null ? null : Limit.fromJson(json['limit']),
    loginName: json['loginName'] as String,
    occupationType: json['occupationType'] as String,
    otpStatus: json['otpStatus'] as bool,
    referenceCorporateName: json['referenceCorporateName'] as String,
    searchText: json['searchText'] as String,
    sortBy: json['sortBy'] as String,
    sortDirectionBy: json['sortDirectionBy'] as String,
    state: json['state'] as String,
    stateFilter:
        (json['stateFilter'] as List)?.map((e) => e as String)?.toList(),
    status: json['status'] as String,
    telephone: json['telephone'] as String,
    userSubtype: json['userSubtype'] as String,
    userSubtypeFilter:
        (json['userSubtypeFilter'] as List)?.map((e) => e as String)?.toList(),
    userType: json['userType'] as String,
    userTypeFilter:
        (json['userTypeFilter'] as List)?.map((e) => e as String)?.toList(),
  );
}

Map<String, dynamic> _$UserListRequestToJson(UserListRequest instance) =>
    <String, dynamic>{
      'bankAccountName': instance.bankAccountName,
      'bankAccountNumber': instance.bankAccountNumber,
      'bankCode': instance.bankCode,
      'bankName': instance.bankName,
      'businessType': instance.businessType,
      'changeBy': instance.changeBy,
      'changeDateFrom': instance.changeDateFrom,
      'changeDateTo': instance.changeDateTo,
      'corporateBusinessType': instance.corporateBusinessType,
      'corporateEmail': instance.corporateEmail,
      'corporateEmailDisplay': instance.corporateEmailDisplay,
      'corporateNameEn': instance.corporateNameEn,
      'corporateNameTh': instance.corporateNameTh,
      'corporateNumber': instance.corporateNumber,
      'corporatePurpose': instance.corporatePurpose,
      'corporateRegistrationDate': instance.corporateRegistrationDate,
      'corporateSymbol': instance.corporateSymbol,
      'corporateTelephone': instance.corporateTelephone,
      'corporateTelephoneDisplay': instance.corporateTelephoneDisplay,
      'corporateType': instance.corporateType,
      'corporateUrlFacebook': instance.corporateUrlFacebook,
      'corporateUrlFacebookDisplay': instance.corporateUrlFacebookDisplay,
      'corporateUrlInstagram': instance.corporateUrlInstagram,
      'corporateUrlInstagramDisplay': instance.corporateUrlInstagramDisplay,
      'corporateUrlTwitter': instance.corporateUrlTwitter,
      'corporateUrlTwitterDisplay': instance.corporateUrlTwitterDisplay,
      'corporateUrlWebsite': instance.corporateUrlWebsite,
      'corporateUrlWebsiteDisplay': instance.corporateUrlWebsiteDisplay,
      'createBy': instance.createBy,
      'createDateFrom': instance.createDateFrom,
      'createDateTo': instance.createDateTo,
      'dipchipStatus': instance.dipchipStatus,
      'displayName': instance.displayName,
      'email': instance.email,
      'emailVerificationStatus': instance.emailVerificationStatus,
      'firstNameEn': instance.firstNameEn,
      'firstNameTh': instance.firstNameTh,
      'id': instance.id,
      'idCardNo': instance.idCardNo,
      'incomeRange': instance.incomeRange,
      'incomeValue': instance.incomeValue,
      'kycStatus': instance.kycStatus,
      'lastNameEn': instance.lastNameEn,
      'lastNameTh': instance.lastNameTh,
      'limit': instance.limit,
      'loginName': instance.loginName,
      'occupationType': instance.occupationType,
      'otpStatus': instance.otpStatus,
      'referenceCorporateName': instance.referenceCorporateName,
      'searchText': instance.searchText,
      'sortBy': instance.sortBy,
      'sortDirectionBy': instance.sortDirectionBy,
      'state': instance.state,
      'stateFilter': instance.stateFilter,
      'status': instance.status,
      'telephone': instance.telephone,
      'userSubtype': instance.userSubtype,
      'userSubtypeFilter': instance.userSubtypeFilter,
      'userType': instance.userType,
      'userTypeFilter': instance.userTypeFilter,
    };
